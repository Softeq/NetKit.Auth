{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "organization": {
      "type": "string",
      "defaultValue": "softeq",
      "metadata": {
        "description": "Org name used to prefix other resource names"
      }
    },
    "project": {
      "type": "string",
      "defaultValue": "netkit",
      "metadata": {
        "description": "Project Name used to prefix other resource names"
      }
    },
    "application":{
      "type": "string",
      "defaultValue": "Auth",
      "metadata": {
        "description": "App Name used to prefix other resource names"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment name used to prefix other resource names"
      }
    },
    "webPlanSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "webPlanCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },  
    "webAppServicePlanName": {
      "type": "string",
      "defaultValue": "Auth",
      "minLength": 0
    },  
    "webAppName": {
      "type": "string",
      "defaultValue": "Auth",
      "minLength": 0
    },
    "storageAccountBaseName": {
      "type": "string",
      "defaultValue": "authstor",
      "minLength": 1
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "auth",
      "metadata": {
        "description": "Name of the Operation database"
      }
    },
    "sqlVersion": {
      "type": "string",
      "defaultValue": "12.0",
      "allowedValues": [
        "12.0",
        "11.0"
      ]
    },
    "sqlEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The type of database to create."
      }
    },
    "sqlServiceTier": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "sqlCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "The database collation for governing the proper use of characters."
      }
    },
    "sqlServerAdminLogin": {
      "type": "securestring",
      "metadata": {
        "description": "Login used for SQL Server"
      }
    },
    "sqlServerAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password used for SQL Server"
      }
    },
    "appInsightsAppType": {
      "type": "string",
      "defaultValue": "web",
      "allowedValues": [
        "web",
        "java",
        "HockeyAppBridge",
        "other"
      ],
      "metadata": {
        "description": "Enter the application type."
      }
    },
    "appInsightsServiceTier": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Application Insights Enterprise"
      ]
    },
    "AppInsightServiceName": {
      "type": "string",
      "defaultValue": "AppInsights"
    },
    "SendGridApiKey":{
      "type": "string",
      "defaultValue": "",
      "minLength": 0
    },
    "serviceBusName": {
      "type": "string",
      "defaultValue": "Shared"
    },
    "serviceBusEdcQueueName": {
      "type": "string",
      "defaultValue": "auth-edc-queue"
    },
    "serviceBusEdcTopicName": {
      "type": "string",
      "defaultValue": "auth-edc-topic"
    },
    "serviceBusEdcSubscriptionName": {
      "type": "string",
      "defaultValue": "auth-edc-sub"
    }
  },
  "variables": {
    "resourcePrefixWithoutDash": "[toLower(concat(replace(parameters('organization'),'-',''),replace(parameters('project'),'-',''), replace(parameters('environment'),'-','')))]",
    "resourcePrefixWithDash": "[toLower(concat(parameters('organization'), '-', parameters('project'), '-', parameters('environment'), '-'))]",
    "webServicePlanName": "[toLower(concat(variables('resourcePrefixWithDash'), parameters('webAppServicePlanName'), '-AppServicePlan'))]",
    "webAppSiteName": "[toLower(concat(variables('resourcePrefixWithDash'), parameters('webAppName'), '-WebApp'))]",
    "sqlServerName": "[tolower(concat(variables('resourcePrefixWithDash'), 'sqlserver'))]",
    "sqlDatabaseName": "[tolower(concat(variables('resourcePrefixWithDash'), parameters('databaseName'), '-db'))]",
    "storageAccount": "[tolower(concat(variables('resourcePrefixWithoutDash'), parameters('storageAccountBaseName')))]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
    "appInsightsName": "[tolower(concat(variables('resourcePrefixWithDash'),parameters('AppInsightServiceName')))]",
    "defaultServiceBusSASKeyName": "RootManageSharedAccessKey",
    "serviceBusServiceName": "[tolower(concat(variables('resourcePrefixWithDash'), parameters('serviceBusName'), '-servicebus'))]",
    "serviceBusAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusServiceName'), variables('defaultServiceBusSASKeyName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "sku": {
        "name": "[parameters('webPlanSku')]",
        "capacity": "[parameters('webPlanCapacity')]"
      },
      "properties": {
        "name": "[variables('webServicePlanName')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "kind": "[parameters('appInsightsAppType')]",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ApplicationId": "[variables('appInsightsName')]"
      },
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppSiteName')))]": "Resource"
      },
      "dependsOn": []
    },
    {
      "name": "[concat(variables('appInsightsName'),'/', replace(parameters('appInsightsServiceTier'), ' ', ''))]",
      "type": "Microsoft.Insights/components/CurrentBillingFeatures",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "CurrentBillingFeatures": "[parameters('appInsightsServiceTier')]",
        "DataVolumeCap": {
          "Cap": 100,
          "WarningThreshold": 90,
          "ResetTime": 24
        }
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms','webServicePlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('webServicePlanName'))]"
      ],
      "properties": {                
        "name": "[variables('webAppSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServicePlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webAppSiteName'))]"
          ],
          "properties": {
            "Database:ConnectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';User Id=', parameters('sqlServerAdminLogin'), ';Password=', parameters('sqlServerAdminPassword'), ';Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Max Pool Size=300;')]",
            "ApplicationInsights:InstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey]",
            "AuthApiUrlConfiguration:ApiUrl": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppSiteName'))).hostNames[0])]",
            "SendGrid:APIKey": "[parameters('SendGridApiKey')]",
            "AzureServiceBus:ConnectionString" : "[listkeys(variables('serviceBusAuthRuleResourceId'), '2017-04-01').primaryConnectionString]",
            "AzureServiceBus:TopicName" : "[parameters('serviceBusEdcTopicName')]",
            "AzureServiceBus:QueueName" : "[parameters('serviceBusEdcQueueName')]",
            "AzureServiceBus:SubscriptionName" : "[parameters('serviceBusEdcSubscriptionName')]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webAppSiteName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": {
              "value" : "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccount'),';AccountKey=',concat(listKeys(variables('storageAccountId'),'2015-06-15').key1))]",
              "type" : "Custom"
            },
            "AzureWebJobsDashboard": {
              "value" : "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccount'),';AccountKey=',concat(listKeys(variables('storageAccountId'),'2015-06-15').key1))]",
              "type" : "Custom"
            }
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webAppSiteName'))]"
          ],
          "properties": {
            "alwaysOn": false,
            "use32BitWorkerProcess": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "version": "[parameters('sqlVersion')]",
        "administratorLogin": "[parameters('sqlServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('sqlDatabaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "[parameters('sqlEdition')]",
            "collation": "[parameters('sqlCollation')]",
            "requestedServiceObjectiveName": "[parameters('sqlServiceTier')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusServiceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('serviceBusEdcTopicName')]",
          "type": "topics",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusServiceName'))]"
          ],
          "properties": {
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": "false",
            "supportOrdering": "false",
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": "false",
            "enableExpress": "false"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "[parameters('serviceBusEdcSubscriptionName')]",
              "type": "Subscriptions",
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('serviceBusServiceName'), parameters('serviceBusEdcTopicName'))]"
              ],
              "properties": {
                "lockDuration": "PT1M",
                "requiresSession": "false",
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": "false",
                "maxDeliveryCount": "10",
                "enableBatchedOperations": "false",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
              }
            }
          ]
        },
        {
          "type": "queues",
          "name": "[parameters('serviceBusEdcQueueName')]",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusServiceName'))]"
          ],
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "scale": null,
          "properties": {
              "lockDuration": "PT30S",
              "maxSizeInMegabytes": 1024,
              "requiresDuplicateDetection": false,
              "requiresSession": false,
              "defaultMessageTimeToLive": "P14D",
              "deadLetteringOnMessageExpiration": true,
              "enableBatchedOperations": true,
              "duplicateDetectionHistoryTimeWindow": "PT10M",
              "maxDeliveryCount": 10,
              "status": "Active",
              "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
              "enablePartitioning": true,
              "enableExpress": false
          }
        }
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "value": "[variables('storageAccount')]",
      "type": "string"
    },
    "sqlServerName": {
      "value": "[variables('sqlServerName')]",
      "type": "string"
    },
    "webAppAppServiceName": {
      "value": "[variables('webAppSiteName')]",
      "type": "string"
    },
    "databaseName": {
      "value": "[variables('sqlDatabaseName')]",
      "type": "string"
    },
    "appInsightsName": {
      "value": "[variables('appInsightsName')]",
      "type": "string"
    },
    "webAppSiteUrl": {
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppSiteName'))).hostNames[0])]",
      "type": "string"
    }
  }
}